---
import Hr from "./Hr.astro";
import IconX from "@/assets/icons/IconX.svg";
import IconMoon from "@/assets/icons/IconMoon.svg";
import IconSearch from "@/assets/icons/IconSearch.svg";
import IconArchive from "@/assets/icons/IconArchive.svg";
import IconSunHigh from "@/assets/icons/IconSunHigh.svg";
import IconMenuDeep from "@/assets/icons/IconMenuDeep.svg";
import LinkButton from "./LinkButton.astro";
import { SITE } from "@/config";

const { pathname } = Astro.url;
const base = (import.meta.env.BASE_URL ?? "/").replace(/\/$/, "");
const baseClean = (import.meta.env.BASE_URL ?? "/").replace(/^\/+|\/+$/g, "");
const normalize = (p: string) => {
  const out = p.endsWith("/") && p !== "/" ? p.slice(0, -1) : p;
  if (!baseClean) return out;
  const prefix = `/${baseClean}`;
  return out.startsWith(prefix) ? out.slice(prefix.length) || "/" : out;
};

// Remove trailing slash from current pathname if exists
const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;

const isActive = (path: string) => {
  const currentNorm = normalize(currentPath);
  const targetNorm = normalize(path);
  if (currentNorm === targetNorm) return true;
  const currentSeg = currentNorm.split("/").filter(Boolean)[0] ?? "";
  const targetSeg = targetNorm.split("/").filter(Boolean)[0] ?? "";
  return currentSeg === targetSeg;
};
---

<header>
  <a
    id="skip-to-content"
    href="#main-content"
    class="absolute start-16 -top-full z-50 bg-background px-3 py-2 text-accent backdrop-blur-lg transition-all focus:top-4"
  >
    Skip to content
  </a>
  <div
    id="nav-container"
    class="mx-auto flex max-w-app flex-col items-center justify-between sm:flex-row"
  >
    <div
      id="top-nav-wrap"
      class="relative flex w-full items-baseline justify-between bg-background p-4 sm:items-center sm:py-6"
    >
      <a
        href={base || "/"}
        class="py-1 text-xl leading-8 font-semibold whitespace-nowrap sm:my-auto sm:text-2xl sm:leading-none"
      >
        {SITE.title}
      </a>
      {
        SITE.lightAndDarkMode && (
          <button
            id="theme-btn"
            class="focus-outline relative size-12 p-4 sm:size-10 hover:[&>svg]:stroke-accent"
            title="Toggles light & dark"
            aria-label="auto"
            aria-live="polite"
          >
            <IconMoon class="absolute top-[50%] left-[50%] -translate-[50%] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90" />
            <IconSunHigh class="absolute top-[50%] left-[50%] -translate-[50%] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0" />
          </button>
        )
      }
    </div>
  </div>
  <Hr />
</header>
